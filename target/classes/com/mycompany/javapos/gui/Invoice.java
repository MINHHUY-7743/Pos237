package com.mycompany.javapos.gui;

import com.mycompany.javapos.gui.POS;
import com.mycompany.javapos.entity.EntityInvoice;
import com.mycompany.javapos.entity.EntityInvoiceDetail;
import com.mycompany.javapos.dao.InvoiceDAO;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.event.ListSelectionEvent; 

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
public class Invoice extends javax.swing.JFrame {

    /**
     * Creates new form Invoice
     */
    public Invoice() {
        initComponents();
        setupInvoiceTableListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // Phương thức load hóa đơn
    private void loadInvoices(Date selectedDate) throws SQLException {
        // Lấy khoảng thời gian được chọn
        String selectedTimeRange = (String) jComboBox1.getSelectedItem();
        // Gọi phương thức từ InvoiceDAO để lấy danh sách hóa đơn
        InvoiceDAO invoiceDAO = new InvoiceDAO();
        List<EntityInvoice> invoices = invoiceDAO.getInvoicesByDateAndTime(selectedDate, selectedTimeRange);
        // Xóa dữ liệu cũ trong bảng
        DefaultTableModel model = (DefaultTableModel) jTableInvoice.getModel();
        model.setRowCount(0);
        // Khởi tạo các biến để tính tổng
        double totalRevenue = 0;
        double totalTax = 0;
        // Thêm dữ liệu mới vào bảng
        for (EntityInvoice invoice : invoices) {
            model.addRow(new Object[]{
                invoice.getId(),
                new SimpleDateFormat("dd/MM/yyyy HH:mm").format(invoice.getDate()),
                invoice.getGrandTotal()
            });
            totalRevenue += invoice.getGrandTotal();
            //totalTax += invoice.getTax();
        }
        
        // Cập nhật các nhãn thống kê
        NumberFormat numberFormat = NumberFormat.getInstance(Locale.US);
        //jLabelTotal.setText(String.format("Tổng tiền: %s VND", numberFormat.format(total)));
        jLabelTotalInvoice.setText("Tổng số hóa đơn: " + invoices.size());
        jLabelTotalRevenue.setText(String.format("Tổng doanh thu: %s VND", numberFormat.format(totalRevenue)));
    }
    
    // Phương thức load chi tiết hóa đơn
    private void loadInvoiceDetails(int invoiceId) {
        try {
            // Gọi phương thức từ InvoiceDAO để lấy chi tiết hóa đơn
            InvoiceDAO invoiceDAO = new InvoiceDAO();
            List<EntityInvoiceDetail> invoiceDetails = invoiceDAO.getInvoiceDetailsByInvoiceId(invoiceId);

            // Xóa dữ liệu cũ trong bảng chi tiết
            DefaultTableModel detailModel = (DefaultTableModel) jTableInvoiceDetail.getModel();
            detailModel.setRowCount(0);

            // Biến để tính tổng tiền và thuế
            double total = 0.0;
            double taxRate = 3.9; // Tỷ lệ thuế
            double tax = 0.0;

            // Thêm dữ liệu mới vào bảng chi tiết và tính tổng tiền
            for (EntityInvoiceDetail detail : invoiceDetails) {
                detailModel.addRow(new Object[]{
                    detail.getProductName(),
                    detail.getQuantity(),
                    detail.getPrice()
                });

                // Tính tổng tiền
                total += detail.getQuantity() * detail.getPrice();
            }

            // Tính thuế
            tax = (total * taxRate) / 100;
            
            // Tạo đối tượng NumberFormat để định dạng số
            NumberFormat numberFormat = NumberFormat.getInstance(Locale.US);
            
            // Cập nhật các nhãn (nếu có) để hiển thị tổng tiền và thuế
            jLabelTotal.setText(String.format("Total: %s VND", numberFormat.format(total)));
            //jLabelTax.setText(String.format("Thuế: %.2f VND", tax));
            jLabelTax.setText(String.format("Tax: %s VND", numberFormat.format(tax)));
            jLabelTotalGrand.setText(String.format("Grand Total: %s VND", numberFormat.format(tax + total)));
            
        } catch (SQLException ex) {
            // Xử lý ngoại lệ
            JOptionPane.showMessageDialog(this, 
                "Lỗi khi tải chi tiết hóa đơn: " + ex.getMessage(), 
                "Lỗi", 
                JOptionPane.ERROR_MESSAGE);

            // Log lỗi (nếu sử dụng logger)
            Logger.getLogger(EntityInvoice.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    // Phương thức thiết lập sự kiện cho bảng hóa đơn
    private void setupInvoiceTableListener() {
        // Lắng nghe sự kiện chọn dòng trong bảng hóa đơn
        jTableInvoice.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = jTableInvoice.getSelectedRow();
                    if (selectedRow != -1) {
                        // Lấy ID hóa đơn từ dòng được chọn
                        int invoiceId = (int) jTableInvoice.getValueAt(selectedRow, 0);

                        // Tải chi tiết hóa đơn
                        loadInvoiceDetails(invoiceId);
                    }
                }
            }
        });
    }

    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableInvoiceDetail = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableInvoice = new javax.swing.JTable();
        jDateChooserDateOfInvoice = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jbtnPos = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabelTotalGrand = new javax.swing.JLabel();
        jLabelTotalInvoice = new javax.swing.JLabel();
        jLabelTotalRevenue = new javax.swing.JLabel();
        jLabelTax = new javax.swing.JLabel();
        jLabelTotal = new javax.swing.JLabel();
        jBttnSetting = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableInvoiceDetail.setBackground(new java.awt.Color(204, 204, 204));
        jTableInvoiceDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item", "Quantity", "Price"
            }
        ));
        jTableInvoiceDetail.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTableInvoiceDetailAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTableInvoiceDetail);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 840, 500));

        jTableInvoice.setBackground(new java.awt.Color(204, 204, 204));
        jTableInvoice.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTableInvoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Date", "Grand Total"
            }
        ));
        jTableInvoice.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTableInvoiceAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(jTableInvoice);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(902, 170, 470, 550));

        jDateChooserDateOfInvoice.setBackground(new java.awt.Color(204, 204, 204));
        jDateChooserDateOfInvoice.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserDateOfInvoice.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jDateChooserDateOfInvoiceAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(jDateChooserDateOfInvoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 100, 250, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Date");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 100, 60, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel2.setText("Welcome to the invoice archive");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        jbtnPos.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbtnPos.setText("back to sale");
        jbtnPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPosActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnPos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "10h", "13h", "18h", "21h", " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 100, 80, 40));

        jLabelTotalGrand.setBackground(new java.awt.Color(255, 255, 204));
        jLabelTotalGrand.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabelTotalGrand.setText("Grand Total: ");
        getContentPane().add(jLabelTotalGrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 690, 330, 40));

        jLabelTotalInvoice.setBackground(new java.awt.Color(255, 255, 204));
        jLabelTotalInvoice.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabelTotalInvoice.setText("Total Invoice: ");
        getContentPane().add(jLabelTotalInvoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 280, 40));

        jLabelTotalRevenue.setBackground(new java.awt.Color(255, 255, 204));
        jLabelTotalRevenue.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabelTotalRevenue.setText("TotalRevenue:");
        jLabelTotalRevenue.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabelTotalRevenueAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(jLabelTotalRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 730, 40));

        jLabelTax.setBackground(new java.awt.Color(255, 255, 204));
        jLabelTax.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabelTax.setText("Tax:");
        getContentPane().add(jLabelTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 690, 240, 40));

        jLabelTotal.setBackground(new java.awt.Color(255, 255, 204));
        jLabelTotal.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabelTotal.setText("Total: ");
        getContentPane().add(jLabelTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 690, 280, 40));

        jBttnSetting.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBttnSetting.setText("Setting");
        getContentPane().add(jBttnSetting, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 10, -1, -1));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 153, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1390, 770));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableInvoiceDetailAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTableInvoiceDetailAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableInvoiceDetailAncestorAdded

    private void jTableInvoiceAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTableInvoiceAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableInvoiceAncestorAdded

    private void jbtnPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPosActionPerformed
        // Quay lại màn hình bán hàng
        POS posSreen = new POS();
        posSreen.setVisible(true);
        this.dispose(); // Đóng cửa sổ hiện tại
    }//GEN-LAST:event_jbtnPosActionPerformed

    private void jDateChooserDateOfInvoiceAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jDateChooserDateOfInvoiceAncestorAdded
        // Lắng nghe sự thay đổi của ngày được chọn
        jDateChooserDateOfInvoice.addPropertyChangeListener("date", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                Date selectedDate = (Date) evt.getNewValue();
                if (selectedDate != null) {
                    try {
                        // Gọi phương thức load hóa đơn khi ngày thay đổi
                        loadInvoices(selectedDate);
                    } catch (SQLException ex) {
                        Logger.getLogger(Invoice.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
    }//GEN-LAST:event_jDateChooserDateOfInvoiceAncestorAdded

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // Lắng nghe sự thay đổi của khoảng thời gian
        String selectedTimeRange = (String) jComboBox1.getSelectedItem();
        Date selectedDate = jDateChooserDateOfInvoice.getDate();
    
        if (selectedDate != null) {
            try {
                // Gọi phương thức load hóa đơn khi khoảng thời gian thay đổi
                loadInvoices(selectedDate);
            } catch (SQLException ex) {
                Logger.getLogger(EntityInvoice.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jLabelTotalRevenueAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabelTotalRevenueAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelTotalRevenueAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EntityInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EntityInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EntityInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EntityInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Invoice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBttnSetting;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooserDateOfInvoice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelTax;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JLabel jLabelTotalGrand;
    private javax.swing.JLabel jLabelTotalInvoice;
    private javax.swing.JLabel jLabelTotalRevenue;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableInvoice;
    private javax.swing.JTable jTableInvoiceDetail;
    private javax.swing.JButton jbtnPos;
    // End of variables declaration//GEN-END:variables
}
